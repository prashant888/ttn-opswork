<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>90</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>90</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>Branch</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>poptropica2-0219-maint</string>
              <string>poptropica2-0218-maint</string>
              <string>poptropica2-0217-maint</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>isDebugBuild</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>isProductionBuild</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>ReleaseTrack</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>beta</string>
              <string>alpha</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.copyartifact.CopyArtifactPermissionProperty plugin="copyartifact@1.37">
      <projectNameList>
        <string>Stage Island Zip Files</string>
      </projectNameList>
    </hudson.plugins.copyartifact.CopyArtifactPermissionProperty>
    <se.diabol.jenkins.pipeline.PipelineProperty plugin="delivery-pipeline-plugin@0.9.7">
      <taskName>Package Mobile Apps</taskName>
      <stageName>Build</stageName>
    </se.diabol.jenkins.pipeline.PipelineProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.SubversionSCM" plugin="subversion@2.5.4">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>https://vc.fen.com/svn/poptropica/projects/poptropica2/branches/${Branch}</remote>
        <credentialsId>7e5a16bd-4034-481d-883a-d3ab3523f249</credentialsId>
        <local>.</local>
        <depthOption>infinity</depthOption>
        <ignoreExternalsOption>false</ignoreExternalsOption>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
    <workspaceUpdater class="hudson.scm.subversion.UpdateWithCleanUpdater"/>
    <ignoreDirPropChanges>false</ignoreDirPropChanges>
    <filterChangelog>false</filterChangelog>
  </scm>
  <scmCheckoutRetryCount>2</scmCheckoutRetryCount>
  <assignedNode>Windows</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>${CORE}</project>
      <filter>**/poptropicore.swc</filter>
      <target>lib</target>
      <excludes>**/debug/**</excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>tags=https://vc.fen.com/svn/poptropica/projects/poptropica2/tags
tagRegExp=`echo $Branch | tr &apos;[:lower:]-&apos; &apos;[:upper:].&apos;| sed &apos;s~_.*~~&apos;`
lastRev=`/usr/bin/svn list $tags | /bin/egrep &quot;$tagRegExp_$MAJOR[.]$MINOR[.]&quot; | /bin/sort -V | /usr/bin/tail -n 1 | /bin/sed &apos;s~/$~~&apos;`
subMinor=`echo $lastRev | sed &apos;s~.*\.~~&apos;`
subMinor=$((subMinor + 1))
nextRev=`echo $lastRev | sed &apos;s~\.[^.]*$~.~&apos;`${subMinor}
echo NEXT_REV=$nextRev &gt; temp.properties
echo BRANCH=$Branch &gt;&gt; temp.properties
echo SVN_URL=$SVN_URL &gt;&gt; temp.properties
echo SVN_REVISION=$SVN_REVISION &gt;&gt; temp.properties
echo BUILD_USER_ID=$BUILD_USER_ID &gt;&gt; temp.properties
echo BUILD_USER=$BUILD_USER &gt;&gt; temp.properties
echo LABEL=&quot;${MAJOR}.${MINOR}.${subMinor}&quot; &gt;&gt; temp.properties
echo MAJOR=$MAJOR &gt;&gt; temp.properties
echo MINOR=$MINOR &gt;&gt; temp.properties
if [ &quot;$isProductionBuild&quot; = true ]
then
  echo ENV=PRD &gt;&gt; temp.properties
  echo RELEASE_ENVIRONMENT=PRD &gt;&gt; temp.properties
else
  echo ENV=QA &gt;&gt; temp.properties
  echo RELEASE_ENVIRONMENT=QA &gt;&gt; temp.properties
fi
if [ &quot;$isDebugBuild&quot; = true ]
then
  echo BuildType=debug &gt;&gt; temp.properties
  echo BUILD_TYPE=debug &gt;&gt; temp.properties
else
  echo BuildType=release &gt;&gt; temp.properties
  echo BUILD_TYPE=release &gt;&gt; temp.properties
fi

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.92.1">
      <info>
        <propertiesFilePath>temp.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Ant plugin="ant@1.2">
      <targets>-verbose clean ipa-${BuildType} apk-${BuildType} amazon-${BuildType}</targets>
      <antName>Ant</antName>
      <properties>SVN_URL=${SVN_URL}
AIR_SDK_HOME=${AIR_SDK_HOME}
MOBILE_RELEASE=${LABEL}
SVN_REVISION=${SVN_REVISION}
repositoryName=poptropica
relativeUrl=^/projects/poptropica2/tags/${NEXT_REV}
release.environment=${RELEASE_ENVIRONMENT}
build.type=${BuildType}
.app.id.suffix=
.app.id.debug=com.pearsoned.poptropica
.app.name.debug=Poptropica
project.build.number=\#${BUILD_NUMBER}
keystore.apk=com.poptropica.play.p12
mobile.provision.profile=Poptropica_Release_Ad_Hoc
config.allowOverwrite=true
config.appVersionNumber=${LABEL}
config.kernelVersionNumber=${CORE}
config.appBuildInfo=${BUILD_NUMBER} r${SVN_REVISION}
config.isProductionBuild=${isProductionBuild}
config.isDebugBuild=${isDebugBuild}
config.iapOn=true
config.isAdsActive=true
config.logLevel=10</properties>
    </hudson.tasks.Ant>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>bld/*/bin/Ios*.ipa,bld/*/bin/Android*.apk,bld/*/bin/Amazon*.apk,bld/islands/*.zip</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.s3.S3BucketPublisher plugin="s3@0.8">
      <profileName>Poptropica Live Zip Files</profileName>
      <entries>
        <hudson.plugins.s3.Entry>
          <bucket>poptropica-live-zipfiles/PRD/${LABEL}</bucket>
          <sourceFile>bld/islands/*.zip</sourceFile>
          <storageClass>STANDARD</storageClass>
          <selectedRegion>us-east-1</selectedRegion>
          <noUploadOnFailure>true</noUploadOnFailure>
          <uploadFromSlave>false</uploadFromSlave>
          <managedArtifacts>false</managedArtifacts>
          <useServerSideEncryption>false</useServerSideEncryption>
          <flatten>true</flatten>
        </hudson.plugins.s3.Entry>
      </entries>
      <dontWaitForConcurrentBuildCompletion>false</dontWaitForConcurrentBuildCompletion>
      <userMetadata/>
    </hudson.plugins.s3.S3BucketPublisher>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients>sarah.lembke@fen.com jeff.faulconer@fen.com billy.belfield@fen.com chris.messner@fen.com bard.mckinley@fen.com karl.debisschop@fen.com</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.svn__tag.SvnTagPublisher plugin="svn-tag@1.18">
      <tagBaseURL>../tags/${env[&apos;NEXT_REV&apos;]}</tagBaseURL>
      <tagComment>Build ${env[&apos;BUILD_TAG&apos;]} (${env[&apos;NEXT_REV&apos;]}/${env[&apos;BRANCH&apos;]}@${env[&apos;SVN_REVISION&apos;]}) started by ${env[&apos;BUILD_USER&apos;]} (${env[&apos;BUILD_USER_ID&apos;]}).</tagComment>
      <tagDeleteComment>Delete old tag by svn-tag Jenkins plugin.</tagDeleteComment>
    </hudson.plugins.svn__tag.SvnTagPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>SOURCE_JOB_NAME=${JOB_NAME}
RELEASE_TYPE=enterprise</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>HockeyApp</projects>
          <condition>UNSTABLE_OR_BETTER</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.28">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <EnvInjectBuildWrapper plugin="envinject@1.92.1">
      <info>
        <scriptContent>echo $isProductionBuild
echo $isDebugBuild</scriptContent>
        <groovyScriptContent>def branch = Branch
def view = &quot;poptropica/projects/poptropica2/branches/&quot; + branch
def core = &quot;poptropicore-&quot; + branch.replaceAll(/(^[^_-]+[_-]|[_-][^_-]+$)/, &quot;&quot;)
def version = branch.replaceAll(/_2/, &quot;_02&quot;).replaceAll(/(^[^_-]+-|-[^_-]+$)/, &quot;&quot;).replaceAll(/-/, &quot;0&quot;)
def major = version[0..1].replaceAll(/^0/, &quot;&quot;)
def minor = version[2..3].replaceAll(/^0/, &quot;&quot;)
def release = major + &quot;.&quot; + minor + &quot;.0&quot;
def map = [
  BRANCH: branch,
  CORE: core,
  RELEASE: release,
  MAJOR: major,
  MINOR: minor,
  VIEW: view
]
return map</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.92.1">
      <injectGlobalPasswords>true</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>password.ipa</name>
          <value>iWiyx6iyt9UdpFKHQJtz6v6GE6+VlSfj8xPuHrFlCuM=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.4"/>
  </buildWrappers>
</project>